[{"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\index.js":"1","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\App.js":"2","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\reportWebVitals.js":"3","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\index.jsx":"4","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Album\\index.jsx":"5","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\pages\\DetailPage\\index.jsx":"6","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\pages\\ListPage\\index.jsx":"7","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\NotFound\\index.jsx":"8","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\categoryAPI.js":"9","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\axiosClient.js":"10","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\components\\TodoList\\index.jsx":"11","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\components\\TodoForm\\index.jsx":"12","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\form-control\\InputField\\Index.jsx":"13","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookForm\\index.jsx":"14","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\index.jsx":"15","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookForm\\common\\const.js":"16","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\index.jsx":"17","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step1.jsx":"18","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step2.jsx":"19","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step3.jsx":"20","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Header.jsx":"21","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Input.jsx":"22","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\MainContainer.jsx":"23","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Form.jsx":"24","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\PrimaryButton.jsx":"25","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Result.jsx":"26","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\DataContext.js":"27","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\FileInput.jsx":"28","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\app\\store.js":"29","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Counter\\counterSlice.js":"30","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Counter\\index.jsx":"31","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\Header\\index.jsx":"32","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Auth\\Components\\Register\\index.jsx":"33","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Auth\\Components\\RegisterForm\\index.jsx":"34","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\form-control\\PasswordField\\Index.jsx":"35","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Auth\\userSlice.js":"36","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\userAPI.js":"37"},{"size":1121,"mtime":1622210747248,"results":"38","hashOfConfig":"39"},{"size":852,"mtime":1618500441406,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":1129,"mtime":1615216164799,"results":"42","hashOfConfig":"39"},{"size":150,"mtime":1611586203617,"results":"43","hashOfConfig":"39"},{"size":467,"mtime":1611758349587,"results":"44","hashOfConfig":"39"},{"size":1756,"mtime":1614691207105,"results":"45","hashOfConfig":"39"},{"size":170,"mtime":1614775063482,"results":"46","hashOfConfig":"39"},{"size":663,"mtime":1611845943945,"results":"47","hashOfConfig":"39"},{"size":913,"mtime":1611846297131,"results":"48","hashOfConfig":"39"},{"size":404,"mtime":1614087744172,"results":"49","hashOfConfig":"39"},{"size":1693,"mtime":1615208457715,"results":"50","hashOfConfig":"39"},{"size":917,"mtime":1619098317077,"results":"51","hashOfConfig":"39"},{"size":3052,"mtime":1615384423332,"results":"52","hashOfConfig":"39"},{"size":985,"mtime":1616079987868,"results":"53","hashOfConfig":"39"},{"size":405,"mtime":1615382088389,"results":"54","hashOfConfig":"39"},{"size":1255,"mtime":1615900302093,"results":"55","hashOfConfig":"39"},{"size":2400,"mtime":1616077506234,"results":"56","hashOfConfig":"39"},{"size":3248,"mtime":1615985389261,"results":"57","hashOfConfig":"39"},{"size":1237,"mtime":1616418623378,"results":"58","hashOfConfig":"39"},{"size":706,"mtime":1615472019867,"results":"59","hashOfConfig":"39"},{"size":428,"mtime":1615472039685,"results":"60","hashOfConfig":"39"},{"size":700,"mtime":1615471881099,"results":"61","hashOfConfig":"39"},{"size":537,"mtime":1615470241039,"results":"62","hashOfConfig":"39"},{"size":660,"mtime":1615470780159,"results":"63","hashOfConfig":"39"},{"size":4046,"mtime":1616417307568,"results":"64","hashOfConfig":"39"},{"size":516,"mtime":1615818990280,"results":"65","hashOfConfig":"39"},{"size":2060,"mtime":1616071298458,"results":"66","hashOfConfig":"39"},{"size":386,"mtime":1619104954331,"results":"67","hashOfConfig":"39"},{"size":459,"mtime":1618493516422,"results":"68","hashOfConfig":"39"},{"size":979,"mtime":1618493524970,"results":"69","hashOfConfig":"39"},{"size":3079,"mtime":1622641203321,"results":"70","hashOfConfig":"39"},{"size":1212,"mtime":1622641049144,"results":"71","hashOfConfig":"39"},{"size":3727,"mtime":1622640377479,"results":"72","hashOfConfig":"39"},{"size":2232,"mtime":1619099134988,"results":"73","hashOfConfig":"39"},{"size":866,"mtime":1622210057770,"results":"74","hashOfConfig":"39"},{"size":211,"mtime":1619104622523,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"1tqwmm8",{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"79"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"79"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"79"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"79"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"79"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"79"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"79"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"79"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"79"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"79"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"79"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"79"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\index.js",["169"],"import store from 'app/store';\nimport { DataProvider } from 'features/Practices/ReactHookFormAllFeatures/DataContext';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <BrowserRouter>\n  //     <DataProvider>\n  //       <App />\n  //     </DataProvider>\n  //   </BrowserRouter>\n  // </React.StrictMode>\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <SnackbarProvider anchorOrigin={{vertical:'top',horizontal:'right'}}  >\n        <App />\n        </SnackbarProvider>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["170","171"],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\App.js",["172","173","174"],"import { Link, NavLink, Redirect, Route, Switch } from 'react-router-dom';\nimport TodoFeature from \"./features/Todo\"\nimport AlbumFeature from \"./features/Album\"\nimport React from 'react';\nimport NotFound from './components/NotFound';\nimport Practices from './features/Practices';\nimport counterFeature from 'features/Counter';\nimport Header from 'components/Header';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Switch>\n        {/* <Redirect from=\"/home/:cc\" to=\"/todos/:cc\" exact /> */}\n\n\n        <Route path=\"/todos\" component={TodoFeature} />\n        <Route path=\"/albums\" component={AlbumFeature} />\n        <Route path=\"/Practices\" component={Practices} />\n        <Route path=\"/Counter\" component={counterFeature} />\n\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\reportWebVitals.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\index.jsx",["175","176"],"\r\nimport NotFound from \"components/NotFound\";\r\nimport React from \"react\";\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport DetailPage from \"./pages/DetailPage\";\r\nimport ReactHookForm from \"../Practices/ReactHookForm\";\r\nimport ListPage from \"./pages/ListPage\";\r\n\r\nfunction Todo(props) {\r\n    const { path, url } = useRouteMatch();\r\n\r\n    const todoList = [\r\n        { id: 1, title: \"Eat\" }, { id: 2, title: \"Sleep\" }\r\n    ]\r\n    return (\r\n        <div>\r\n            <h2> Todo</h2>\r\n            <ul>\r\n                <li><Link to={`${url}/ListPage`} >ListPage</Link></li>\r\n                <li><Link to={`${url}/DetailPage/123`}>DetailPage</Link></li>\r\n            </ul>\r\n\r\n            <Switch>\r\n                <Route path={`${url}/ListPage`} component={ListPage} />\r\n                <Route path={`${url}/DetailPage/:detailId`} component={DetailPage} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n\r\n            <h2> Todo</h2>\r\n            <TodoList todoList={todoList} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Album\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\pages\\DetailPage\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\pages\\ListPage\\index.jsx",["177","178"],"import React from \"react\";\r\nimport { Route, Switch, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport queryString from \"query-string\";\r\nimport { useEffect } from \"react\";\r\nimport categoryAPI from \"api/categoryAPI\";\r\nimport TodoForm from \"features/Todo/components/TodoForm\";\r\n\r\n\r\nfunction ListPage() {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const match = useRouteMatch();\r\n\r\n    let param = queryString.parse(location.search);\r\n    console.log(\"param\", param)\r\n\r\n    const queryParams = { text: \"one\" };\r\n    const oneOnClick = () => {\r\n        history.push(\r\n            {\r\n                pathname: match.path,\r\n                search: queryString.stringify(queryParams)\r\n            }\r\n        )\r\n    }\r\n\r\n    const queryParams2 = { text: \"two\" };\r\n    const twoOnClick = () => {\r\n        history.push(\r\n            {\r\n                pathname: match.path,\r\n                search: queryString.stringify(queryParams2)\r\n            }\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            let res = await categoryAPI.getAll();\r\n            console.log(\"products\", res);\r\n        }\r\n        fetchProducts();\r\n    }, [])\r\n\r\n\r\n    const handleTodoFormSubmit = value => {\r\n        console.log(\"ListPage\", value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>What to do</h3>\r\n            <TodoForm onSubmit={handleTodoFormSubmit} />\r\n            <h2> ListPage </h2>\r\n            <li>Location {param.text} </li>\r\n            <div>\r\n                <button onClick={() => oneOnClick()}>one</button>\r\n                <button onClick={() => twoOnClick()}>two</button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPage;\r\n","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\NotFound\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\categoryAPI.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\axiosClient.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\components\\TodoList\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\components\\TodoForm\\index.jsx",["179"],"import React, { useRef, forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputField from 'components/form-control/InputField/Index';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nTodoForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n\r\n};\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const schema = yup.object().shape({\r\n        title: yup.string().required('Please enter title')\r\n            .min(5, \"Length is to short\"),\r\n\r\n    });\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            title: '',\r\n        },\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const handleSubmit = value => {\r\n        const { onSubmit } = props;\r\n        if (onSubmit) {\r\n            onSubmit(value)\r\n        }\r\n        form.reset();\r\n    }\r\n    let emailRef = useRef(null);\r\n    function onClickButton() {\r\n        emailRef.current.focus();\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n                <InputField name=\"title\" label=\"Todo\" form={form} />\r\n            </form>\r\n        ------ Test Something ----------\r\n            <div>\r\n                <EmailInput ref={emailRef} />\r\n                <button onClick={() => onClickButton()}>\r\n                    Click me to focus email\r\n        </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst EmailInput3 = forwardRef((props, ref) => (\r\n    <input ref={ref} {...props} type=\"email\" className=\"AppEmailInput\" />\r\n));\r\nconst EmailInput = forwardRef((props, ref) => (\r\n    <input ref={ref} {...props} type=\"email\" className=\"AppEmailInput\" />\r\n));\r\nexport default TodoForm;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\form-control\\InputField\\Index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookForm\\index.jsx",["180"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport content from './common/const';\r\nimport \"./styles/style.css\";\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nReactHookForm.propTypes = {\r\n\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup.string().required(\"username is a required fielddd\"),\r\n    password: yup.string().required().min(5),\r\n    email: yup.string().required(\"please enter the email\").email(),\r\n});\r\n\r\nfunction ReactHookForm(props) {\r\n    const { register, handleSubmit, errors, formState, reset, control } = useForm({\r\n        defaultValues: {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\"\r\n        },\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"submit\", data)\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Login\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                {\r\n                    content.inputs.map((input, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                {/* <TextField\r\n                                    label={input.label}\r\n                                    name={input.name}\r\n                                    type={input.type}\r\n                                    inputRef={register}\r\n\r\n                                    error={!!formState.touched[input.name] && !!errors[input.name]}\r\n                                    helperText={errors[input.name]?.message}\r\n                                /> */}\r\n\r\n                                <Controller\r\n                                    label={input.label}\r\n                                    name={input.name}\r\n                                    type={input.type}\r\n                                    inputRef={register}\r\n                                    control={control}\r\n\r\n                                    as={TextField}\r\n                                    error={!!formState.touched[input.name] && !!errors[input.name]}\r\n                                    helperText={errors[input.name]?.message}\r\n                                />\r\n                                <p>\r\n                                    {/* <label htmlFor=\"\">{input.label}</label>\r\n                                    <input\r\n                                        name={input.name}\r\n                                        type={input.type}\r\n\r\n                                        ref={register}\r\n                                    /> */}\r\n                                </p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                    type=\"submit\">Submit</Button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactHookForm;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\index.jsx",["181","182","183"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Switch, useRouteMatch, Route } from 'react-router-dom';\r\nimport ReactHookForm from './ReactHookForm';\r\nimport ReactHookFormAllFeatures from './ReactHookFormAllFeatures';\r\nimport { DataProvider } from './ReactHookFormAllFeatures/DataContext';\r\n\r\nPractice.propTypes = {\r\n\r\n};\r\n\r\nfunction Practice(props) {\r\n    const { path, url } = useRouteMatch();\r\n    return (\r\n        <div>\r\n            🍌\r\n            <ul>\r\n                <li><Link to={`${url}/ReactHookForm`} >ReactHookForm</Link></li>\r\n                <li><Link to={`${url}/ReactHookFormAllFeatures`} >ReactHookFormAllFeatures</Link></li>\r\n            </ul>\r\n            <Switch>\r\n                <Route path={`${url}/ReactHookForm`} component={ReactHookForm} />\r\n                <Route path={`${url}/ReactHookFormAllFeatures`} component={ReactHookFormAllFeatures} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Practice;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookForm\\common\\const.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\index.jsx",["184","185"],"import React from 'react';\r\nimport \"./index.css\";\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\r\nimport Header from \"./components/Header\";\r\nimport Step1 from \"./Step1\";\r\nimport Step2 from \"./Step2\";\r\nimport Step3 from \"./Step3\";\r\nimport Result from \"./Result\";\r\nimport { DataProvider } from './DataContext';\r\nimport NotFound from 'components/NotFound';\r\n\r\nApp.propTypes = {\r\n\r\n};\r\n\r\nfunction App(props) {\r\n    const { path } = useRouteMatch();\r\n    console.log(\"path\", path)\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={`${path}/`} component={Step1} />\r\n\r\n                    <Route exact path={`${path}/Step1`} >\r\n                        <Redirect to={`${path}/`} />\r\n                    </Route>\r\n\r\n                    <Route path={`${path}/Step2`} component={Step2} />\r\n                    <Route path={`${path}/Step3`} component={Step3} />\r\n                    <Route path={`${path}/result`} component={Result} />\r\n                    <Route component={NotFound} />\r\n\r\n\r\n                </Switch>\r\n            </Router>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default App;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step1.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step2.jsx",["186","187"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport MainContainer from './components/MainContainer';\r\nimport Form from './components/Form';\r\nimport Input from './components/Input';\r\nimport PrimaryButton from './components/PrimaryButton';\r\nimport { Checkbox, FormControlLabel, Typography } from '@material-ui/core';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useData } from './DataContext';\r\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\r\n\r\nStep2.propTypes = {\r\n\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string()\r\n        .email(\"Email should have correct format\")\r\n        .required(\"Email is a required field\"),\r\n});\r\n\r\nconst normalizePhoneNumber = (value) => {\r\n    const phoneNumber = parsePhoneNumberFromString(value);\r\n    if (!phoneNumber) {\r\n        return value;\r\n    }\r\n    console.log(\"phoneNumber\", phoneNumber)\r\n    return phoneNumber.formatInternational();\r\n\r\n}\r\n\r\nfunction Step2(props) {\r\n    const { path } = useRouteMatch();\r\n    const { data, setValues } = useData();\r\n    const { register, watch, errors, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            email: data.email,\r\n            hasPhone: data.hasPhone,\r\n            phoneNumber: data.phoneNumber\r\n        },\r\n        mode: \"onBlur\",\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const hasPhone = watch(\"hasPhone\", false);\r\n\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (value) => {\r\n        setValues(value);\r\n        history.push(\"Step3\");\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n                🍹  Step 2 🐱\r\n            </Typography>\r\n\r\n            <Form type=\"submit\" onSubmit={handleSubmit(onSubmit)}>\r\n                <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    ref={register}\r\n                    required\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        defaultValue={data.hasPhone}\r\n                        defaultChecked={data.hasPhone}\r\n                        color=\"primary\"\r\n                        inputRef={register}\r\n                        name=\"hasPhone\"\r\n                    />}\r\n\r\n                    label=\"Do you have a phone\"\r\n                />\r\n                {\r\n                    hasPhone && <Input\r\n                        ref={register}\r\n                        id=\"phoneNumber\"\r\n                        type=\"tel\"\r\n                        label=\"Phone Number\"\r\n                        name=\"phoneNumber\"\r\n                        onChange={(e) => {\r\n                            e.target.value = normalizePhoneNumber(e.target.value)\r\n                        }}\r\n                    />\r\n                }\r\n\r\n                <PrimaryButton type=\"submit\">Next</PrimaryButton>\r\n            </Form>\r\n\r\n        </MainContainer>\r\n    );\r\n}\r\n\r\nexport default Step2;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step3.jsx",["188"],"import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport FileInput from './components/FileInput';\r\nimport Form from './components/Form';\r\nimport MainContainer from './components/MainContainer';\r\nimport PrimaryButton from './components/PrimaryButton';\r\nimport { useData } from './DataContext';\r\n\r\nStep3.propTypes = {\r\n\r\n};\r\n\r\nfunction Step3() {\r\n    const { path } = useRouteMatch();\r\n    const history = useHistory();\r\n    const { data, setValues } = useData();\r\n    const { control, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            files: data.files\r\n        },\r\n    });\r\n\r\n    const onSubmit = (value) => {\r\n\r\n        setValues(value);\r\n        history.push(\"result\");\r\n    }\r\n\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n                🐶 Step 3 ✈\r\n            </Typography>\r\n\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <FileInput name=\"files\" control={control} />\r\n                <PrimaryButton>Next</PrimaryButton>\r\n            </Form>\r\n\r\n        </MainContainer>\r\n    );\r\n}\r\n\r\nexport default Step3;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Header.jsx",["189"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nHeaders.propTypes = {\r\n\r\n};\r\nconst useStyles = makeStyles((them) => ({\r\n    root: {\r\n        margin: them.spacing(3, 0, 2),\r\n        fontFamily: \"Permanent Marker\",\r\n        textAlign: \"center\",\r\n        fontSize: \"40px\",\r\n        color: \"deeppink\",\r\n        textShadow: \"1px 1px darkmagenta\"\r\n    }\r\n}))\r\n\r\nfunction Headers(props) {\r\n\r\n    const styles = useStyles()\r\n    return (\r\n        <Typography\r\n            component=\"h1\"\r\n            className={styles.root}\r\n        >\r\n            The Ultime Form Challenge\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Headers;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Input.jsx",["190"],"import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={ref}\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            {...props}\r\n        />\r\n    );\r\n})\r\n\r\nexport default Input;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\MainContainer.jsx",["191"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\n\r\nMainContainer.propTypes = {\r\n\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nfunction MainContainer({ children, ...props }) {\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Container\r\n            className={styles.root}\r\n            component=\"main\"\r\n            maxWidth=\"xs\"\r\n            {...props}\r\n        >\r\n\r\n            {children}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MainContainer;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Form.jsx",["192"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nForm.propTypes = {\r\n\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        witdh: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction Form({ children, ...props }) {\r\n    const styles = useStyles();\r\n    return (\r\n        <form\r\n            className={styles.root}\r\n            noValidate {...props}\r\n        >\r\n            {children}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\PrimaryButton.jsx",["193"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nPrimaryButton.propTypes = {\r\n\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    }\r\n}));\r\n\r\nfunction PrimaryButton({ children, ...props }) {\r\n    const styles = useStyles();\r\n    return (\r\n        <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={styles.root}\r\n            {...props}\r\n\r\n        >\r\n            { children}\r\n\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default PrimaryButton;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Result.jsx",["194","195","196"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainContainer from './components/MainContainer';\r\nimport {\r\n    makeStyles, Table, TableCell, TableContainer,\r\n    TableHead, TableRow, Typography, TableBody, Paper, List, ListItem, ListItemIcon, ListItemText, Link\r\n}\r\n    from '@material-ui/core';\r\nimport { InsertDriveFile } from '@material-ui/icons';\r\nimport PrimaryButton from './components/PrimaryButton';\r\nimport Confetti from 'react-confetti';\r\nimport { useData } from './DataContext';\r\nimport Swal from 'sweetalert2';\r\n\r\nResult.propTypes = {\r\n\r\n};\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        marginBottom: \"30px\"\r\n    },\r\n    table: {\r\n        marginBottom: \"30px\"\r\n    }\r\n\r\n})\r\n\r\nfunction Result(props) {\r\n    const [success, setSuccess] = useState(false);\r\n    const styles = useStyle();\r\n    const { data } = useData();\r\n    const { files } = data;\r\n    console.log(\"data-context\", data);\r\n    const entries = Object.entries(data).filter((entry) => entry[0] != \"files\");\r\n\r\n    const onSubmit = async () => {\r\n        const formData = new FormData();\r\n        if (data.files) {\r\n            data.files.forEach((file) => {\r\n                formData.append(\"files\", file, file.name);\r\n            });\r\n        }\r\n\r\n        entries.forEach((entry) => {\r\n            formData.append(entry[0], entry[1]);\r\n        })\r\n\r\n        // const res = await fetch(\"http://localhost:4000/\", {\r\n        //     method: \"POST\",\r\n        //     body: formData\r\n        // });\r\n\r\n        // if (res.status == 200) {\r\n        //     Swal.fire(\"Great job!\", \"You've passed the challenge\", \"success\");\r\n        //     setSuccess(true);\r\n        // }\r\n\r\n        Swal.fire(\"Great job!\", \"You've passed the challenge\", \"success\");\r\n        setSuccess(true);\r\n    };\r\n\r\n    if (success) {\r\n        return <Confetti />\r\n    }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n                🧾 Form value 🍅\r\n            </Typography>\r\n            <TableContainer className={styles.root} component={Paper}>\r\n                <Table className={styles.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Field</TableCell>\r\n                            <TableCell align=\"right\">Value</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            entries.map((entry) => (\r\n                                <TableRow key={entry[0]}>\r\n                                    <TableCell component=\"th\" scope=\"row\">{entry[0]}</TableCell>\r\n                                    <TableCell align=\"right\">{entry[1].toString()}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                files && (\r\n                    <>\r\n                        <Typography component=\"h2\" variant=\"h5\">\r\n                            📁 Files\r\n                        </Typography>\r\n                        <List>\r\n                            {\r\n                                files.map((f, index) => {\r\n                                    <ListItem key={index}>\r\n                                        <ListItemIcon>\r\n                                            <InsertDriveFile />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={f.name} secondary={f.size} />\r\n                                    </ListItem>\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </>\r\n                )\r\n            }\r\n            <PrimaryButton onClick={onSubmit}>Submit</PrimaryButton>\r\n            <Link to=\"/\">Start over</Link>\r\n        </MainContainer>\r\n    );\r\n}\r\n\r\nexport default Result;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\DataContext.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\FileInput.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\app\\store.js",["197"],"import { useReducer } from \"react\";\r\nimport counterReducer from \"../features/Counter/counterSlice\";\r\nimport userReducer from \"../features/Auth/userSlice\";\r\nconst { configureStore } = require(\"@reduxjs/toolkit\");\r\n\r\nconst rootReducer = {\r\n    counter: counterReducer,\r\n    user: userReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n\r\n})\r\n\r\nexport default store;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Counter\\counterSlice.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Counter\\index.jsx",["198"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch as xxx, useSelector as yyy } from 'react-redux';\r\nimport { decrease, increase } from './counterSlice';\r\n\r\ncounterFeature.propTypes = {\r\n\r\n};\r\n\r\nfunction counterFeature(props) {\r\n    const dispatch = xxx();\r\n    const count = yyy(state => state.counter)\r\n\r\n    const handleIncreaseClick = () => {\r\n        const action = increase(2);\r\n        dispatch(action);\r\n    }\r\n    const handleDecreaseClick = () => {\r\n        const action = decrease(3);\r\n        dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                Counter:{count}\r\n            </div>\r\n            <div>\r\n                <button onClick={handleIncreaseClick}>\r\n                    Increase\r\n            </button>\r\n                <button onClick={handleDecreaseClick}>\r\n                    Decrease\r\n            </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default counterFeature;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\Header\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Auth\\Components\\Register\\index.jsx",["199"],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Auth\\Components\\RegisterForm\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\form-control\\PasswordField\\Index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Auth\\userSlice.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\userAPI.js",[],{"ruleId":"200","severity":1,"message":"201","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":22},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"200","severity":1,"message":"208","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":14},{"ruleId":"200","severity":1,"message":"209","line":1,"column":16,"nodeType":"202","messageId":"203","endLine":1,"endColumn":23},{"ruleId":"200","severity":1,"message":"210","line":1,"column":25,"nodeType":"202","messageId":"203","endLine":1,"endColumn":33},{"ruleId":"200","severity":1,"message":"211","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":21},{"ruleId":"200","severity":1,"message":"212","line":11,"column":13,"nodeType":"202","messageId":"203","endLine":11,"endColumn":17},{"ruleId":"200","severity":1,"message":"213","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":15},{"ruleId":"200","severity":1,"message":"214","line":2,"column":17,"nodeType":"202","messageId":"203","endLine":2,"endColumn":23},{"ruleId":"200","severity":1,"message":"215","line":54,"column":7,"nodeType":"202","messageId":"203","endLine":54,"endColumn":18},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"201","line":6,"column":10,"nodeType":"202","messageId":"203","endLine":6,"endColumn":22},{"ruleId":"200","severity":1,"message":"212","line":13,"column":13,"nodeType":"202","messageId":"203","endLine":13,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"201","line":10,"column":10,"nodeType":"202","messageId":"203","endLine":10,"endColumn":22},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"212","line":36,"column":13,"nodeType":"202","messageId":"203","endLine":36,"endColumn":17},{"ruleId":"200","severity":1,"message":"212","line":16,"column":13,"nodeType":"202","messageId":"203","endLine":16,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":35,"column":69,"nodeType":"219","messageId":"220","endLine":35,"endColumn":71},{"ruleId":"221","severity":1,"message":"222","line":100,"column":54,"nodeType":"223","messageId":"224","endLine":100,"endColumn":56},{"ruleId":"200","severity":1,"message":"225","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":20},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},{"ruleId":"200","severity":1,"message":"216","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":17},"no-unused-vars","'DataProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["226"],"no-negated-in-lhs",["227"],"'Link' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'ReactHookForm' is defined but never used.","'path' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'EmailInput3' is assigned a value but never used.","'PropTypes' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useReducer' is defined but never used.","no-global-assign","no-unsafe-negation"]