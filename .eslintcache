[{"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\index.js":"1","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\App.js":"2","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\reportWebVitals.js":"3","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\index.jsx":"4","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Album\\index.jsx":"5","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\pages\\DetailPage\\index.jsx":"6","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\pages\\ListPage\\index.jsx":"7","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\NotFound\\index.jsx":"8","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\categoryAPI.js":"9","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\axiosClient.js":"10","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\components\\TodoList\\index.jsx":"11","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\components\\TodoForm\\index.jsx":"12","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\form-control\\InputField\\Index.jsx":"13","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookForm\\index.jsx":"14","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\index.jsx":"15","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookForm\\common\\const.js":"16","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\index.jsx":"17","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step1.jsx":"18","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step2.jsx":"19","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step3.jsx":"20","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Header.jsx":"21","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Input.jsx":"22","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\MainContainer.jsx":"23","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Form.jsx":"24","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\PrimaryButton.jsx":"25","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Result.jsx":"26","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\DataContext.js":"27","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\FileInput.jsx":"28"},{"size":726,"mtime":1615819827518,"results":"29","hashOfConfig":"30"},{"size":835,"mtime":1615814490671,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":1129,"mtime":1615216164799,"results":"33","hashOfConfig":"30"},{"size":150,"mtime":1611586203617,"results":"34","hashOfConfig":"30"},{"size":467,"mtime":1611758349587,"results":"35","hashOfConfig":"30"},{"size":1756,"mtime":1614691207105,"results":"36","hashOfConfig":"30"},{"size":170,"mtime":1614775063482,"results":"37","hashOfConfig":"30"},{"size":663,"mtime":1611845943945,"results":"38","hashOfConfig":"30"},{"size":913,"mtime":1611846297131,"results":"39","hashOfConfig":"30"},{"size":404,"mtime":1614087744172,"results":"40","hashOfConfig":"30"},{"size":1693,"mtime":1615208457715,"results":"41","hashOfConfig":"30"},{"size":923,"mtime":1614692716067,"results":"42","hashOfConfig":"30"},{"size":3052,"mtime":1615384423332,"results":"43","hashOfConfig":"30"},{"size":985,"mtime":1616079987868,"results":"44","hashOfConfig":"30"},{"size":405,"mtime":1615382088389,"results":"45","hashOfConfig":"30"},{"size":1255,"mtime":1615900302093,"results":"46","hashOfConfig":"30"},{"size":2400,"mtime":1616077506234,"results":"47","hashOfConfig":"30"},{"size":3248,"mtime":1615985389261,"results":"48","hashOfConfig":"30"},{"size":1237,"mtime":1616418623378,"results":"49","hashOfConfig":"30"},{"size":706,"mtime":1615472019867,"results":"50","hashOfConfig":"30"},{"size":428,"mtime":1615472039685,"results":"51","hashOfConfig":"30"},{"size":700,"mtime":1615471881099,"results":"52","hashOfConfig":"30"},{"size":537,"mtime":1615470241039,"results":"53","hashOfConfig":"30"},{"size":660,"mtime":1615470780159,"results":"54","hashOfConfig":"30"},{"size":4046,"mtime":1616417307568,"results":"55","hashOfConfig":"30"},{"size":516,"mtime":1615818990280,"results":"56","hashOfConfig":"30"},{"size":2060,"mtime":1616071298458,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1tqwmm8",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\index.js",[],["128","129"],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\App.js",["130","131"],"import { Link, NavLink, Redirect, Route, Switch } from 'react-router-dom';\nimport TodoFeature from \"./features/Todo\"\nimport AlbumFeature from \"./features/Album\"\nimport React from 'react';\nimport NotFound from './components/NotFound';\nimport Practices from './features/Practices';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <p>\n        <Link to=\"/todos\">Todos</Link>\n        <Link to=\"/albums\">Albums</Link>\n        <Link to=\"/Practices\">Practices</Link>\n\n      </p>\n      <Switch>\n        {/* <Redirect from=\"/home/:cc\" to=\"/todos/:cc\" exact /> */}\n\n\n        <Route path=\"/todos\" component={TodoFeature} />\n        <Route path=\"/albums\" component={AlbumFeature} />\n        <Route path=\"/Practices\" component={Practices} />\n\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\reportWebVitals.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\index.jsx",["132","133"],"\r\nimport NotFound from \"components/NotFound\";\r\nimport React from \"react\";\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport DetailPage from \"./pages/DetailPage\";\r\nimport ReactHookForm from \"../Practices/ReactHookForm\";\r\nimport ListPage from \"./pages/ListPage\";\r\n\r\nfunction Todo(props) {\r\n    const { path, url } = useRouteMatch();\r\n\r\n    const todoList = [\r\n        { id: 1, title: \"Eat\" }, { id: 2, title: \"Sleep\" }\r\n    ]\r\n    return (\r\n        <div>\r\n            <h2> Todo</h2>\r\n            <ul>\r\n                <li><Link to={`${url}/ListPage`} >ListPage</Link></li>\r\n                <li><Link to={`${url}/DetailPage/123`}>DetailPage</Link></li>\r\n            </ul>\r\n\r\n            <Switch>\r\n                <Route path={`${url}/ListPage`} component={ListPage} />\r\n                <Route path={`${url}/DetailPage/:detailId`} component={DetailPage} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n\r\n            <h2> Todo</h2>\r\n            <TodoList todoList={todoList} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Album\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\pages\\DetailPage\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\pages\\ListPage\\index.jsx",["134","135"],"import React from \"react\";\r\nimport { Route, Switch, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport queryString from \"query-string\";\r\nimport { useEffect } from \"react\";\r\nimport categoryAPI from \"api/categoryAPI\";\r\nimport TodoForm from \"features/Todo/components/TodoForm\";\r\n\r\n\r\nfunction ListPage() {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const match = useRouteMatch();\r\n\r\n    let param = queryString.parse(location.search);\r\n    console.log(\"param\", param)\r\n\r\n    const queryParams = { text: \"one\" };\r\n    const oneOnClick = () => {\r\n        history.push(\r\n            {\r\n                pathname: match.path,\r\n                search: queryString.stringify(queryParams)\r\n            }\r\n        )\r\n    }\r\n\r\n    const queryParams2 = { text: \"two\" };\r\n    const twoOnClick = () => {\r\n        history.push(\r\n            {\r\n                pathname: match.path,\r\n                search: queryString.stringify(queryParams2)\r\n            }\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            let res = await categoryAPI.getAll();\r\n            console.log(\"products\", res);\r\n        }\r\n        fetchProducts();\r\n    }, [])\r\n\r\n\r\n    const handleTodoFormSubmit = value => {\r\n        console.log(\"ListPage\", value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>What to do</h3>\r\n            <TodoForm onSubmit={handleTodoFormSubmit} />\r\n            <h2> ListPage </h2>\r\n            <li>Location {param.text} </li>\r\n            <div>\r\n                <button onClick={() => oneOnClick()}>one</button>\r\n                <button onClick={() => twoOnClick()}>two</button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPage;\r\n","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\NotFound\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\categoryAPI.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\api\\axiosClient.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\components\\TodoList\\index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Todo\\components\\TodoForm\\index.jsx",["136"],"import React, { useRef, forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputField from 'components/form-control/InputField/Index';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nTodoForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n\r\n};\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const schema = yup.object().shape({\r\n        title: yup.string().required('Please enter title')\r\n            .min(5, \"Length is to short\"),\r\n\r\n    });\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            title: '',\r\n        },\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const handleSubmit = value => {\r\n        const { onSubmit } = props;\r\n        if (onSubmit) {\r\n            onSubmit(value)\r\n        }\r\n        form.reset();\r\n    }\r\n    let emailRef = useRef(null);\r\n    function onClickButton() {\r\n        emailRef.current.focus();\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n                <InputField name=\"title\" label=\"Todo\" form={form} />\r\n            </form>\r\n        ------ Test Something ----------\r\n            <div>\r\n                <EmailInput ref={emailRef} />\r\n                <button onClick={() => onClickButton()}>\r\n                    Click me to focus email\r\n        </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst EmailInput3 = forwardRef((props, ref) => (\r\n    <input ref={ref} {...props} type=\"email\" className=\"AppEmailInput\" />\r\n));\r\nconst EmailInput = forwardRef((props, ref) => (\r\n    <input ref={ref} {...props} type=\"email\" className=\"AppEmailInput\" />\r\n));\r\nexport default TodoForm;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\components\\form-control\\InputField\\Index.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookForm\\index.jsx",["137"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport content from './common/const';\r\nimport \"./styles/style.css\";\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nReactHookForm.propTypes = {\r\n\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup.string().required(\"username is a required fielddd\"),\r\n    password: yup.string().required().min(5),\r\n    email: yup.string().required(\"please enter the email\").email(),\r\n});\r\n\r\nfunction ReactHookForm(props) {\r\n    const { register, handleSubmit, errors, formState, reset, control } = useForm({\r\n        defaultValues: {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\"\r\n        },\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"submit\", data)\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Login\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                {\r\n                    content.inputs.map((input, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                {/* <TextField\r\n                                    label={input.label}\r\n                                    name={input.name}\r\n                                    type={input.type}\r\n                                    inputRef={register}\r\n\r\n                                    error={!!formState.touched[input.name] && !!errors[input.name]}\r\n                                    helperText={errors[input.name]?.message}\r\n                                /> */}\r\n\r\n                                <Controller\r\n                                    label={input.label}\r\n                                    name={input.name}\r\n                                    type={input.type}\r\n                                    inputRef={register}\r\n                                    control={control}\r\n\r\n                                    as={TextField}\r\n                                    error={!!formState.touched[input.name] && !!errors[input.name]}\r\n                                    helperText={errors[input.name]?.message}\r\n                                />\r\n                                <p>\r\n                                    {/* <label htmlFor=\"\">{input.label}</label>\r\n                                    <input\r\n                                        name={input.name}\r\n                                        type={input.type}\r\n\r\n                                        ref={register}\r\n                                    /> */}\r\n                                </p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                    type=\"submit\">Submit</Button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactHookForm;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\index.jsx",["138","139","140"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Switch, useRouteMatch, Route } from 'react-router-dom';\r\nimport ReactHookForm from './ReactHookForm';\r\nimport ReactHookFormAllFeatures from './ReactHookFormAllFeatures';\r\nimport { DataProvider } from './ReactHookFormAllFeatures/DataContext';\r\n\r\nPractice.propTypes = {\r\n\r\n};\r\n\r\nfunction Practice(props) {\r\n    const { path, url } = useRouteMatch();\r\n    return (\r\n        <div>\r\n            🍌\r\n            <ul>\r\n                <li><Link to={`${url}/ReactHookForm`} >ReactHookForm</Link></li>\r\n                <li><Link to={`${url}/ReactHookFormAllFeatures`} >ReactHookFormAllFeatures</Link></li>\r\n            </ul>\r\n            <Switch>\r\n                <Route path={`${url}/ReactHookForm`} component={ReactHookForm} />\r\n                <Route path={`${url}/ReactHookFormAllFeatures`} component={ReactHookFormAllFeatures} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Practice;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookForm\\common\\const.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\index.jsx",["141","142"],"import React from 'react';\r\nimport \"./index.css\";\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\r\nimport Header from \"./components/Header\";\r\nimport Step1 from \"./Step1\";\r\nimport Step2 from \"./Step2\";\r\nimport Step3 from \"./Step3\";\r\nimport Result from \"./Result\";\r\nimport { DataProvider } from './DataContext';\r\nimport NotFound from 'components/NotFound';\r\n\r\nApp.propTypes = {\r\n\r\n};\r\n\r\nfunction App(props) {\r\n    const { path } = useRouteMatch();\r\n    console.log(\"path\", path)\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={`${path}/`} component={Step1} />\r\n\r\n                    <Route exact path={`${path}/Step1`} >\r\n                        <Redirect to={`${path}/`} />\r\n                    </Route>\r\n\r\n                    <Route path={`${path}/Step2`} component={Step2} />\r\n                    <Route path={`${path}/Step3`} component={Step3} />\r\n                    <Route path={`${path}/result`} component={Result} />\r\n                    <Route component={NotFound} />\r\n\r\n\r\n                </Switch>\r\n            </Router>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default App;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step1.jsx",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step2.jsx",["143","144"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport MainContainer from './components/MainContainer';\r\nimport Form from './components/Form';\r\nimport Input from './components/Input';\r\nimport PrimaryButton from './components/PrimaryButton';\r\nimport { Checkbox, FormControlLabel, Typography } from '@material-ui/core';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useData } from './DataContext';\r\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\r\n\r\nStep2.propTypes = {\r\n\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string()\r\n        .email(\"Email should have correct format\")\r\n        .required(\"Email is a required field\"),\r\n});\r\n\r\nconst normalizePhoneNumber = (value) => {\r\n    const phoneNumber = parsePhoneNumberFromString(value);\r\n    if (!phoneNumber) {\r\n        return value;\r\n    }\r\n    console.log(\"phoneNumber\", phoneNumber)\r\n    return phoneNumber.formatInternational();\r\n\r\n}\r\n\r\nfunction Step2(props) {\r\n    const { path } = useRouteMatch();\r\n    const { data, setValues } = useData();\r\n    const { register, watch, errors, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            email: data.email,\r\n            hasPhone: data.hasPhone,\r\n            phoneNumber: data.phoneNumber\r\n        },\r\n        mode: \"onBlur\",\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const hasPhone = watch(\"hasPhone\", false);\r\n\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (value) => {\r\n        setValues(value);\r\n        history.push(\"Step3\");\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n                🍹  Step 2 🐱\r\n            </Typography>\r\n\r\n            <Form type=\"submit\" onSubmit={handleSubmit(onSubmit)}>\r\n                <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    ref={register}\r\n                    required\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        defaultValue={data.hasPhone}\r\n                        defaultChecked={data.hasPhone}\r\n                        color=\"primary\"\r\n                        inputRef={register}\r\n                        name=\"hasPhone\"\r\n                    />}\r\n\r\n                    label=\"Do you have a phone\"\r\n                />\r\n                {\r\n                    hasPhone && <Input\r\n                        ref={register}\r\n                        id=\"phoneNumber\"\r\n                        type=\"tel\"\r\n                        label=\"Phone Number\"\r\n                        name=\"phoneNumber\"\r\n                        onChange={(e) => {\r\n                            e.target.value = normalizePhoneNumber(e.target.value)\r\n                        }}\r\n                    />\r\n                }\r\n\r\n                <PrimaryButton type=\"submit\">Next</PrimaryButton>\r\n            </Form>\r\n\r\n        </MainContainer>\r\n    );\r\n}\r\n\r\nexport default Step2;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Step3.jsx",["145"],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Header.jsx",["146"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nHeaders.propTypes = {\r\n\r\n};\r\nconst useStyles = makeStyles((them) => ({\r\n    root: {\r\n        margin: them.spacing(3, 0, 2),\r\n        fontFamily: \"Permanent Marker\",\r\n        textAlign: \"center\",\r\n        fontSize: \"40px\",\r\n        color: \"deeppink\",\r\n        textShadow: \"1px 1px darkmagenta\"\r\n    }\r\n}))\r\n\r\nfunction Headers(props) {\r\n\r\n    const styles = useStyles()\r\n    return (\r\n        <Typography\r\n            component=\"h1\"\r\n            className={styles.root}\r\n        >\r\n            The Ultime Form Challenge\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Headers;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Input.jsx",["147"],"import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={ref}\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            {...props}\r\n        />\r\n    );\r\n})\r\n\r\nexport default Input;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\MainContainer.jsx",["148"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\n\r\nMainContainer.propTypes = {\r\n\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nfunction MainContainer({ children, ...props }) {\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Container\r\n            className={styles.root}\r\n            component=\"main\"\r\n            maxWidth=\"xs\"\r\n            {...props}\r\n        >\r\n\r\n            {children}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MainContainer;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\Form.jsx",["149"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nForm.propTypes = {\r\n\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        witdh: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction Form({ children, ...props }) {\r\n    const styles = useStyles();\r\n    return (\r\n        <form\r\n            className={styles.root}\r\n            noValidate {...props}\r\n        >\r\n            {children}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\PrimaryButton.jsx",["150"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nPrimaryButton.propTypes = {\r\n\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    }\r\n}));\r\n\r\nfunction PrimaryButton({ children, ...props }) {\r\n    const styles = useStyles();\r\n    return (\r\n        <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={styles.root}\r\n            {...props}\r\n\r\n        >\r\n            { children}\r\n\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default PrimaryButton;","D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\Result.jsx",["151","152","153"],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\DataContext.js",[],"D:\\Learning\\Udemy\\React\\Projects\\learn-react\\src\\features\\Practices\\ReactHookFormAllFeatures\\components\\FileInput.jsx",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":1,"column":16,"nodeType":"160","messageId":"161","endLine":1,"endColumn":23},{"ruleId":"158","severity":1,"message":"162","line":1,"column":25,"nodeType":"160","messageId":"161","endLine":1,"endColumn":33},{"ruleId":"158","severity":1,"message":"163","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":21},{"ruleId":"158","severity":1,"message":"164","line":11,"column":13,"nodeType":"160","messageId":"161","endLine":11,"endColumn":17},{"ruleId":"158","severity":1,"message":"165","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":15},{"ruleId":"158","severity":1,"message":"166","line":2,"column":17,"nodeType":"160","messageId":"161","endLine":2,"endColumn":23},{"ruleId":"158","severity":1,"message":"167","line":54,"column":7,"nodeType":"160","messageId":"161","endLine":54,"endColumn":18},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"169","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":22},{"ruleId":"158","severity":1,"message":"164","line":13,"column":13,"nodeType":"160","messageId":"161","endLine":13,"endColumn":17},{"ruleId":"158","severity":1,"message":"168","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"169","line":10,"column":10,"nodeType":"160","messageId":"161","endLine":10,"endColumn":22},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"164","line":36,"column":13,"nodeType":"160","messageId":"161","endLine":36,"endColumn":17},{"ruleId":"158","severity":1,"message":"164","line":16,"column":13,"nodeType":"160","messageId":"161","endLine":16,"endColumn":17},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"168","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":35,"column":69,"nodeType":"172","messageId":"173","endLine":35,"endColumn":71},{"ruleId":"174","severity":1,"message":"175","line":100,"column":54,"nodeType":"176","messageId":"177","endLine":100,"endColumn":56},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'ReactHookForm' is defined but never used.","'path' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'EmailInput3' is assigned a value but never used.","'PropTypes' is defined but never used.","'DataProvider' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]